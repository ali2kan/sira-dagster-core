services:
  # postgresql_dagster:
  #   image: postgres:17
  #   container_name: postgresql_dagster
  #   environment:
  #     POSTGRES_USER: postgres_user
  #     POSTGRES_PASSWORD: postgres_password
  #     POSTGRES_DB: postgres_db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - dagster_network

  webserver_dagster:
    image: ghcr.io/ali2kan/sira-dagster-core:latest
    # image: ${PIPELINE_IMAGE:-dagster-core}
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    restart: always
    entrypoint:
      - dagster-webserver
      - -h
      - 0.0.0.0
      - -p
      - "3000"
      - -w
      - /opt/dagster/dagster_home/workspace.yaml # Mount workspace.yaml here
    container_name: webserver_dagster
    ports:
      - 3000:3000
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER:-postgres}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB:-postgres}
      DAGSTER_POSTGRES_HOST: ${POSTGRES_HOST:-10.10.10.199}
      DAGSTER_CURRENT_IMAGE: ${DAGSTER_CURRENT_IMAGE:-ghcr.io/ali2kan/sira-dagster-core:latest}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./core/io_manager_storage:/tmp/io_manager_storage
      - ./core/storage:/opt/dagster/dagster_home/storage
      - ./core/dagster_home/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
      - ./core/dagster_home/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      # - ./core/dagster_home/compute-logs:/tmp/dagster-home/storage/compute-logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # - ./core/config:/opt/dagster/app/config
    networks:
      - dagster_network
    # depends_on:
    #   - postgresql_dagster

  daemon_dagster:
    image: ghcr.io/ali2kan/sira-dagster-core:latest
    # image: ${PIPELINE_IMAGE:-dagster-core}
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    entrypoint:
      - dagster-daemon
      - run
    container_name: daemon_dagster
    restart: on-failure
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER:-postgres}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB:-postgres}
      DAGSTER_POSTGRES_HOST: ${POSTGRES_HOST:-10.10.10.199}
      DAGSTER_CURRENT_IMAGE: ${DAGSTER_CURRENT_IMAGE:-ghcr.io/ali2kan/sira-dagster-core:latest}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./core/tmp/io_manager_storage:/tmp/io_manager_storage
      - ./core/storage:/opt/dagster/dagster_home/storage
      - ./core/dagster_home/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
      # - ./core/dagster_home/compute-logs:/tmp/dagster-home/storage/compute-logs
      - ./core/dagster_home/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # - ./core/config:/opt/dagster/app/config
    networks:
      - dagster_network
    # depends_on:
    #   - postgresql_dagster

    # volumes:
    #   postgres_data: # Named volume for PostgreSQL data persistence

networks:
  dagster_network:
    external: true
    name: dagster_network
